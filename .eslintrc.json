{
   "$schema": "https://json.schemastore.org/eslintrc.json",
   "env": {
      "browser": false,
      "es2021": true,
      "node": true
   },
   "extends": [
      "plugin:react/recommended",
      "plugin:prettier/recommended",
      "plugin:react-hooks/recommended",
      "plugin:jsx-a11y/recommended"
   ],
   "plugins": ["react", "unused-imports", "import", "@typescript-eslint", "jsx-a11y", "prettier"],
   "parser": "@typescript-eslint/parser",
   "parserOptions": {
      "ecmaFeatures": {
         "jsx": true
      },
      "ecmaVersion": 12,
      "sourceType": "module"
   },
   "settings": {
      "react": {
         "version": "detect"
      }
   },
   "rules": {
      "no-console": "warn",
      "react/prop-types": "off",
      "react/jsx-uses-react": "off",
      "react/react-in-jsx-scope": "off",
      "react-hooks/exhaustive-deps": "warn",
      "jsx-a11y/click-events-have-key-events": "warn",
      "jsx-a11y/interactive-supports-focus": "warn",
      "prettier/prettier": [
         "warn", {
            "singleQuote": true,
            "bracketSameLine": true,
            "tabWidth": 3,
            "arrowParens": "avoid",
            "quoteProps": "consistent",
            "proseWrap": "always",
            "printWidth": 100,
            "singleAttributePerLine": true,
            "plugins": ["prettier-plugin-tailwindcss"],
            "tailwindFunctions": ["tv", "cn"]
         }
      ],
      "no-unused-vars": "off",
      "unused-imports/no-unused-vars": "off",
      "unused-imports/no-unused-imports": "warn",
      "@typescript-eslint/consistent-type-imports": "error",
      "@typescript-eslint/no-unused-vars": [
         "warn",
         {
            "args": "after-used",
            "ignoreRestSiblings": false,
            "argsIgnorePattern": "^_.*?$"
         }
      ],
      "import/consistent-type-specifier-style": ["error", "prefer-top-level"],
      "sort-imports": ["warn", {
         "ignoreCase": true,
         "ignoreDeclarationSort": true
      }],
      "import/order": [
         "warn",
         {
            // "groups": ["type", "builtin", "object", "external", "internal", "parent", "sibling", "index"],
            "groups": [["external", "builtin"], "internal", ["sibling", "parent"], "index"],
            "pathGroups": [
               {
                  "pattern": "{react,react-dom}",
                  "group": "external",
                  "position": "before"
               },
               {
                  "pattern": "{next,next/**}",
                  "group": "external",
                  "position": "before"
               },
               {
                  "pattern": "{next-**,next-**/**}",
                  "group": "external",
                  "position": "before"
               },
               {
                  "pattern": "@nextui-org/**",
                  "group": "external",
                  "position": "before"
               },
               {
                  "pattern": "@react-aria/**",
                  "group": "external",
                  "position": "before"
               },
               {
                  "pattern": "^**",
                  "group": "internal"
               }
            ],
            "pathGroupsExcludedImportTypes": ["internal", "react"],
            "newlines-between": "always",
            "alphabetize": {
               "order": "asc",
               "caseInsensitive": true
            }
         }
      ],
      "react/self-closing-comp": "warn",
      "react/jsx-sort-props": [
         "warn",
         {
            "callbacksLast": true,
            "shorthandFirst": true,
            "noSortAlphabetically": false,
            "reservedFirst": true
         }
      ],
      "padding-line-between-statements": [
         "warn",
         {
            "blankLine": "always",
            "prev": "*",
            "next": "return"
         },
         {
            "blankLine": "always",
            "prev": [
               "const",
               "let",
               "var"
            ],
            "next": "*"
         },
         {
            "blankLine": "any",
            "prev": [
               "const",
               "let",
               "var"
            ],
            "next": [
               "const",
               "let",
               "var"
            ]
         }
      ]
   }
}
